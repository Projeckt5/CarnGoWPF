// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEnteryourcredentialsText.UIItemEdit;
            WpfEdit uIPasswordEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPasswordEdit;
            WpfEdit uIPasswordConfirmEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPasswordConfirmEdit;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(495, 214));

            // Type 'hmm2' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RecordedMethod1Params.UIItemEditText;

            // Type 'Control + {RMenu}' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RecordedMethod1Params.UIItemEditSendKeys, ModifierKeys.Control);

            // Type 'hmm' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RecordedMethod1Params.UIItemEditText1;

            // Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RecordedMethod1Params.UIItemEditSendKeys1, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'hmm@hmm.com' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RecordedMethod1Params.UIItemEditText2;

            // Type '{Tab}' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RecordedMethod1Params.UIItemEditSendKeys2, ModifierKeys.None);

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.RecordedMethod1Params.UIPasswordEditSendKeys, true);

            // Type '********' in 'PasswordConfirm' text box
            Keyboard.SendKeys(uIPasswordConfirmEdit, this.RecordedMethod1Params.UIPasswordConfirmEditSendKeys, true);

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(369, 398));

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(467, 437));
        }
        
        /// <summary>
        /// RegisterEmail - Use 'RegisterEmailParams' to pass parameters into this method.
        /// </summary>
        public void RegisterEmail()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEnteryourcredentialsText.UIItemEdit;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(496, 218));

            // Type 'person' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterEmailParams.UIItemEditText;

            // Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RegisterEmailParams.UIItemEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'person@email.com' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterEmailParams.UIItemEditText1;
        }
        
        /// <summary>
        /// RegisterEmail_personmaildotcom - Use 'RegisterEmail_personmaildotcomParams' to pass parameters into this method.
        /// </summary>
        public void RegisterEmail_personmaildotcom()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEnteryourcredentialsText.UIItemEdit;
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(496, 218));

            // Type 'person' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterEmail_personmaildotcomParams.UIItemEditText;

            // Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RegisterEmail_personmaildotcomParams.UIItemEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'person@email.com' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterEmail_personmaildotcomParams.UIItemEditText1;

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(537, 227));

            // Type 'person' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterEmail_personmaildotcomParams.UIItemEditText2;

            // Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RegisterEmail_personmaildotcomParams.UIItemEditSendKeys1, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'person@mail.com' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterEmail_personmaildotcomParams.UIItemEditText3;
        }
        
        /// <summary>
        /// RegisterPassword_tester1 - Use 'RegisterPassword_tester1Params' to pass parameters into this method.
        /// </summary>
        public void RegisterPassword_tester1()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIPasswordEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPasswordEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(538, 291));

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.RegisterPassword_tester1Params.UIPasswordEditSendKeys, true);
        }
        
        /// <summary>
        /// RepeatPassword_tester1 - Use 'RepeatPassword_tester1Params' to pass parameters into this method.
        /// </summary>
        public void RepeatPassword_tester1()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIPasswordConfirmEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPasswordConfirmEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(557, 357));

            // Type '********' in 'PasswordConfirm' text box
            Keyboard.SendKeys(uIPasswordConfirmEdit, this.RepeatPassword_tester1Params.UIPasswordConfirmEditSendKeys, true);
        }
        
        /// <summary>
        /// CheckAgreeToAllTerms
        /// </summary>
        public void CheckAgreeToAllTerms()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(308, 395));
        }
        
        /// <summary>
        /// ClickRegister
        /// </summary>
        public void ClickRegister()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(490, 443));
        }
        
        /// <summary>
        /// AssertPageContainsLoginText - Use 'AssertPageContainsLoginTextExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPageContainsLoginText()
        {
            #region Variable Declarations
            WpfText uIEnteryourcredentialsText = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEnteryourcredentialsText;
            #endregion

            // Verify that the 'Name' property of 'Enter your credentials below' label contains 'Enter your credentials below'
            StringAssert.Contains(uIEnteryourcredentialsText.Name, this.AssertPageContainsLoginTextExpectedValues.UIEnteryourcredentialsTextName);
        }
        
        /// <summary>
        /// NavigateToRegisterUser
        /// </summary>
        public void NavigateToRegisterUser()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(488, 467));
        }
        
        /// <summary>
        /// RegisterTestUserEmail - Use 'RegisterTestUserEmailParams' to pass parameters into this method.
        /// </summary>
        public void RegisterTestUserEmail()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEnteryourcredentialsText.UIItemEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(470, 213));

            // Type 'test' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterTestUserEmailParams.UIItemEditText;

            // Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
            Keyboard.SendKeys(uIItemEdit, this.RegisterTestUserEmailParams.UIItemEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'test@tester.com' in first text box next to 'Enter your credentials below' label
            uIItemEdit.Text = this.RegisterTestUserEmailParams.UIItemEditText1;
        }
        
        /// <summary>
        /// ClickEmailBox
        /// </summary>
        public void ClickEmailBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(476, 227));
        }
        
        /// <summary>
        /// ClickPasswordBox
        /// </summary>
        public void ClickPasswordBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(508, 287));
        }
        
        /// <summary>
        /// ClickRepeatPasswordBox
        /// </summary>
        public void ClickRepeatPasswordBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(450, 353));
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIEmailEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEmailEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(484, 255));

            // Type 'c' in 'Email' text box
            uIEmailEdit.Text = this.RecordedMethod2Params.UIEmailEditText;
        }
        
        /// <summary>
        /// EnterExistingUserEmail - Use 'EnterExistingUserEmailParams' to pass parameters into this method.
        /// </summary>
        public void EnterExistingUserEmail()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIEmailEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEmailEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(484, 260));

            // Type 'car' in 'Email' text box
            uIEmailEdit.Text = this.EnterExistingUserEmailParams.UIEmailEditText;

            // Type 'Alt, Control + 2' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.EnterExistingUserEmailParams.UIEmailEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'car@owner' in 'Email' text box
            uIEmailEdit.Text = this.EnterExistingUserEmailParams.UIEmailEditText1;
        }
        
        /// <summary>
        /// EnterExistingEmail - Use 'EnterExistingEmailParams' to pass parameters into this method.
        /// </summary>
        public void EnterExistingEmail()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIEmailEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEmailEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(515, 252));

            // Type 'car' in 'Email' text box
            uIEmailEdit.Text = this.EnterExistingEmailParams.UIEmailEditText;

            // Type 'Alt, Control + 2' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.EnterExistingEmailParams.UIEmailEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'car@owner' in 'Email' text box
            uIEmailEdit.Text = this.EnterExistingEmailParams.UIEmailEditText1;

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(776, 428));
        }
        
        /// <summary>
        /// ClickLoginEmailBox
        /// </summary>
        public void ClickLoginEmailBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(520, 265));
        }
        
        /// <summary>
        /// ClickLoginPasswordBox
        /// </summary>
        public void ClickLoginPasswordBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(461, 325));
        }
        
        /// <summary>
        /// ClickLoginButton
        /// </summary>
        public void ClickLoginButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(469, 416));
        }
        
        /// <summary>
        /// ClickOwnerButton
        /// </summary>
        public void ClickOwnerButton()
        {
            #region Variable Declarations
            WpfButton uIItemButton = this.UIMainWindowWindow.UIRootCustom.UIRootCustom1.UIItemButton;
            #endregion

            // Click button numbered 2 next to 'root' custom control
            Mouse.Click(uIItemButton, new Point(47, 37));
        }
        
        /// <summary>
        /// ClickPersonalInformation - Use 'ClickPersonalInformationParams' to pass parameters into this method.
        /// </summary>
        public void ClickPersonalInformation()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPersonalinformationText.UIItemEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(743, 205));

            // Type '{Left}' in first text box next to 'Personal information:' label
            Keyboard.SendKeys(uIItemEdit, this.ClickPersonalInformationParams.UIItemEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// DeletePersonalInformationRow - Use 'DeletePersonalInformationRowParams' to pass parameters into this method.
        /// </summary>
        public void DeletePersonalInformationRow()
        {
            #region Variable Declarations
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPersonalinformationText.UIItemEdit;
            #endregion

            // Type '' in first text box next to 'Personal information:' label
            uIItemEdit.Text = this.DeletePersonalInformationRowParams.UIItemEditText;
        }
        
        /// <summary>
        /// EditPersonalInformation - Use 'EditPersonalInformationParams' to pass parameters into this method.
        /// </summary>
        public void EditPersonalInformation()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPersonalinformationText.UIItemEdit;
            #endregion

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(727, 205));

            // Type 'Jens' in first text box next to 'Personal information:' label
            uIItemEdit.Text = this.EditPersonalInformationParams.UIItemEditText;

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(917, 305));
        }
        
        /// <summary>
        /// EnterNewPersonalInformation - Use 'EnterNewPersonalInformationParams' to pass parameters into this method.
        /// </summary>
        public void EnterNewPersonalInformation()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIItemEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPersonalinformationText.UIItemEdit;
            WpfEdit uIItemEdit1 = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPersonalinformationText.UIItemEdit1;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(720, 210));

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(739, 203));

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(739, 203));

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(739, 203));

            // Type 'hej' in first text box next to 'Personal information:' label
            uIItemEdit.Text = this.EnterNewPersonalInformationParams.UIItemEditText;

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(738, 263));

            // Type 'tester' in text box numbered 2 next to 'Personal information:' label
            uIItemEdit1.Text = this.EnterNewPersonalInformationParams.UIItemEdit1Text;

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(726, 442));
        }
        
        /// <summary>
        /// ClickUserInformation
        /// </summary>
        public void ClickUserInformation()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(709, 209));
        }
        
        /// <summary>
        /// ClickUserInformationSecondRow
        /// </summary>
        public void ClickUserInformationSecondRow()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(730, 262));
        }
        
        /// <summary>
        /// ClickUserSaveButton
        /// </summary>
        public void ClickUserSaveButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Double-Click 'CurrentPageFrame' pane
            Mouse.DoubleClick(uICurrentPageFramePane, new Point(775, 386));

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(726, 457));
        }
        
        /// <summary>
        /// ClickSignOut
        /// </summary>
        public void ClickSignOut()
        {
            #region Variable Declarations
            WpfButton uIItemButton = this.UIMainWindowWindow.UIRootCustom.UIItem26Text.UIItemButton;
            #endregion

            // Click first button next to '26' label
            Mouse.Click(uIItemButton, new Point(44, 35));
        }
        
        /// <summary>
        /// AssertLastNameEqualstester - Use 'AssertLastNameEqualstesterExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertLastNameEqualstester()
        {
            #region Variable Declarations
            WpfEdit uIItemEdit1 = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPersonalinformationText.UIItemEdit1;
            #endregion

            // Verify that the 'Text' property of text box numbered 2 next to 'Personal information:' label equals 'tester'
            Assert.AreEqual(this.AssertLastNameEqualstesterExpectedValues.UIItemEdit1Text, uIItemEdit1.Text);
        }
        
        /// <summary>
        /// ClickUserSaveAndSignOut
        /// </summary>
        public void ClickUserSaveAndSignOut()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfButton uIItemButton = this.UIMainWindowWindow.UIRootCustom.UIItem2Text.UIItemButton;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(731, 454));

            // Click first button next to '2' label
            Mouse.Click(uIItemButton, new Point(57, 42));
        }
        
        /// <summary>
        /// ClickHomeAndUserButtons
        /// </summary>
        public void ClickHomeAndUserButtons()
        {
            #region Variable Declarations
            WpfButton uIItemButton = this.UIMainWindowWindow.UIRootCustom.UIItemButton;
            WpfButton uIItemButton1 = this.UIMainWindowWindow.UIRootCustom.UIRootCustom1.UIItemButton;
            #endregion

            // Click '' button
            Mouse.Click(uIItemButton, new Point(20, 39));

            // Click button numbered 2 next to 'root' custom control
            Mouse.Click(uIItemButton1, new Point(54, 57));
        }
        
        /// <summary>
        /// AssertNameEqualsWelcome - Use 'AssertNameEqualsWelcomeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNameEqualsWelcome()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Verify that the 'Name' property of 'CurrentPageFrame' pane equals 'Welcome'
            Assert.AreEqual(this.AssertNameEqualsWelcomeExpectedValues.UICurrentPageFramePaneName, uICurrentPageFramePane.Name);
        }
        
        /// <summary>
        /// AssertHeaderBarAppears - Use 'AssertHeaderBarAppearsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertHeaderBarAppears()
        {
            #region Variable Declarations
            WpfCustom uIRootCustom = this.UIMainWindowWindow.UIRootCustom;
            #endregion

            // Verify that the 'ClassName' property of 'root' custom control equals 'Uia.HeaderBarControl'
            Assert.AreEqual(this.AssertHeaderBarAppearsExpectedValues.UIRootCustomClassName, uIRootCustom.ClassName);
        }
        
        /// <summary>
        /// ClickMyCarsButton
        /// </summary>
        public void ClickMyCarsButton()
        {
            #region Variable Declarations
            WpfButton uIItemButton1 = this.UIMainWindowWindow.UIRootCustom.UIRootCustom1.UIItemButton1;
            #endregion

            // Click button numbered 3 next to 'root' custom control
            Mouse.Click(uIItemButton1, new Point(56, 36));
        }
        
        /// <summary>
        /// ClickYourCarsEditButton
        /// </summary>
        public void ClickYourCarsEditButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(710, 462));
        }
        
        /// <summary>
        /// ClickYourCarsCarMake
        /// </summary>
        public void ClickYourCarsCarMake()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(624, 156));
        }
        
        /// <summary>
        /// ClickYourCarsCarModel
        /// </summary>
        public void ClickYourCarsCarModel()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(795, 152));
        }
        
        /// <summary>
        /// ClickYourCarsSaveButton
        /// </summary>
        public void ClickYourCarsSaveButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(721, 474));
        }
        
        /// <summary>
        /// ClickSignOutButton
        /// </summary>
        public void ClickSignOutButton()
        {
            #region Variable Declarations
            WpfButton uIItemButton = this.UIMainWindowWindow.UIRootCustom.UIItem0Text.UIItemButton;
            #endregion

            // Click first button next to '0' label
            Mouse.Click(uIItemButton, new Point(46, 32));
        }
        
        /// <summary>
        /// ClickFindCarButton
        /// </summary>
        public void ClickFindCarButton()
        {
            #region Variable Declarations
            WpfButton uIItemButton2 = this.UIMainWindowWindow.UIRootCustom.UIRootCustom1.UIItemButton2;
            #endregion

            // Click first button next to 'root' custom control
            Mouse.Click(uIItemButton2, new Point(58, 35));
        }
        
        /// <summary>
        /// ClickSearchCarBrandBox
        /// </summary>
        public void ClickSearchCarBrandBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(162, 230));
        }
        
        /// <summary>
        /// ClickSearchSeatsBox
        /// </summary>
        public void ClickSearchSeatsBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(168, 322));
        }
        
        /// <summary>
        /// ClickSearchSearchButton
        /// </summary>
        public void ClickSearchSearchButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(54, 525));
        }
        
        /// <summary>
        /// ClickSearchResultCar
        /// </summary>
        public void ClickSearchResultCar()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow1.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(903, 319));
        }
        
        /// <summary>
        /// ClickYourCarsRegNr
        /// </summary>
        public void ClickYourCarsRegNr()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(802, 211));
        }
        
        /// <summary>
        /// ClickSearchRentCar2
        /// </summary>
        public void ClickSearchRentCar2()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(850, 197));
        }
        
        /// <summary>
        /// SetSendRequestFromDate - Use 'SetSendRequestFromDateParams' to pass parameters into this method.
        /// </summary>
        public void SetSendRequestFromDate()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIPART_TextBoxEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIPART_TextBoxEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(590, 111));

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(553, 111));

            // Type 'Control + a' in 'PART_TextBox' text box
            Keyboard.SendKeys(uIPART_TextBoxEdit, this.SetSendRequestFromDateParams.UIPART_TextBoxEditSendKeys, ModifierKeys.Control);
        }
        
        /// <summary>
        /// SetSendRequestToDate - Use 'SetSendRequestToDateParams' to pass parameters into this method.
        /// </summary>
        public void SetSendRequestToDate()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIPART_TextBoxEdit = this.UIMainWindowWindow.UINewPageFramePane.UITheDateenteredhastobDatePicker.UIPART_TextBoxEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(750, 110));

            // Type 'Control + a' in 'PART_TextBox' text box
            Keyboard.SendKeys(uIPART_TextBoxEdit, this.SetSendRequestToDateParams.UIPART_TextBoxEditSendKeys, ModifierKeys.Control);
        }
        
        /// <summary>
        /// ClickSendRequestMessage
        /// </summary>
        public void ClickSendRequestMessage()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(552, 161));
        }
        
        /// <summary>
        /// ClickSendRequestRentCarButton
        /// </summary>
        public void ClickSendRequestRentCarButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(549, 223));
        }
        
        /// <summary>
        /// ClickEditUserSaveButton
        /// </summary>
        public void ClickEditUserSaveButton()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(709, 453));
        }
        
        /// <summary>
        /// ClickTopNotification - Use 'ClickTopNotificationParams' to pass parameters into this method.
        /// </summary>
        public void ClickTopNotification()
        {
            #region Variable Declarations
            WpfToggleButton uIItemToggleButton = this.UIMainWindowWindow.UIRootCustom.UIItemToggleButton;
            WpfButton uIConfirmButton = this.UIMainWindowWindow.UIItemCustom2.UIItemCustom1.UIConfirmButton;
            #endregion

            // Set to 'Pressed' state '' toggle button
            uIItemToggleButton.Pressed = this.ClickTopNotificationParams.UIItemToggleButtonPressed;

            // Click 'Confirm' button
            Mouse.Click(uIConfirmButton, new Point(45, 13));
        }
        
        /// <summary>
        /// ClickOnPasswordBox
        /// </summary>
        public void ClickOnPasswordBox()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(917, 470));
        }
        
        /// <summary>
        /// OpenToFullScreen - Use 'OpenToFullScreenParams' to pass parameters into this method.
        /// </summary>
        public void OpenToFullScreen()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(569, 321));

            // Press keyboard shortcut keys 'Windows + {Up}'
            Keyboard.SendKeys(this.OpenToFullScreenParams.SendKeys, ModifierKeys.Windows);
        }
        
        /// <summary>
        /// PressLogin
        /// </summary>
        public void PressLogin()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(923, 550));
        }
        
        /// <summary>
        /// ClickEmailBoxTest - Use 'ClickEmailBoxTestParams' to pass parameters into this method.
        /// </summary>
        public void ClickEmailBoxTest()
        {
            #region Variable Declarations
            WpfPane uICurrentPageFramePane = this.UIMainWindowWindow.UIItemCustom.UICurrentPageFramePane;
            WpfEdit uIEmailEdit = this.UIMainWindowWindow.UIItemCustom.UINewPageFramePane.UIEmailEdit;
            #endregion

            // Click 'CurrentPageFrame' pane
            Mouse.Click(uICurrentPageFramePane, new Point(965, 430));

            // Type 'Control + a' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.ClickEmailBoxTestParams.UIEmailEditSendKeys, ModifierKeys.Control);
        }
        
        /// <summary>
        /// PressNotificationButton - Use 'PressNotificationButtonParams' to pass parameters into this method.
        /// </summary>
        public void PressNotificationButton()
        {
            #region Variable Declarations
            WpfToggleButton uIItemToggleButton = this.UIMainWindowWindow.UIRootCustom.UIItemToggleButton;
            #endregion

            // Set to 'Pressed' state '' toggle button
            uIItemToggleButton.Pressed = this.PressNotificationButtonParams.UIItemToggleButtonPressed;
        }
        
        /// <summary>
        /// PressTopNotification
        /// </summary>
        public void PressTopNotification()
        {
            #region Variable Declarations
            WpfButton uIConfirmButton = this.UIMainWindowWindow.UIItemCustom2.UIItemCustom1.UIConfirmButton;
            #endregion

            // Click 'Confirm' button
            Mouse.Click(uIConfirmButton, new Point(62, 8));
        }
        
        /// <summary>
        /// PressConfirmOnTopNotification
        /// </summary>
        public void PressConfirmOnTopNotification()
        {
            #region Variable Declarations
            WpfButton uIConfirmButton = this.UIMainWindowWindow.UIItemCustom2.UIItemCustom1.UIConfirmButton;
            #endregion

            // Click 'Confirm' button
            Mouse.Click(uIConfirmButton, new Point(51, 11));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RegisterEmailParams RegisterEmailParams
        {
            get
            {
                if ((this.mRegisterEmailParams == null))
                {
                    this.mRegisterEmailParams = new RegisterEmailParams();
                }
                return this.mRegisterEmailParams;
            }
        }
        
        public virtual RegisterEmail_personmaildotcomParams RegisterEmail_personmaildotcomParams
        {
            get
            {
                if ((this.mRegisterEmail_personmaildotcomParams == null))
                {
                    this.mRegisterEmail_personmaildotcomParams = new RegisterEmail_personmaildotcomParams();
                }
                return this.mRegisterEmail_personmaildotcomParams;
            }
        }
        
        public virtual RegisterPassword_tester1Params RegisterPassword_tester1Params
        {
            get
            {
                if ((this.mRegisterPassword_tester1Params == null))
                {
                    this.mRegisterPassword_tester1Params = new RegisterPassword_tester1Params();
                }
                return this.mRegisterPassword_tester1Params;
            }
        }
        
        public virtual RepeatPassword_tester1Params RepeatPassword_tester1Params
        {
            get
            {
                if ((this.mRepeatPassword_tester1Params == null))
                {
                    this.mRepeatPassword_tester1Params = new RepeatPassword_tester1Params();
                }
                return this.mRepeatPassword_tester1Params;
            }
        }
        
        public virtual AssertPageContainsLoginTextExpectedValues AssertPageContainsLoginTextExpectedValues
        {
            get
            {
                if ((this.mAssertPageContainsLoginTextExpectedValues == null))
                {
                    this.mAssertPageContainsLoginTextExpectedValues = new AssertPageContainsLoginTextExpectedValues();
                }
                return this.mAssertPageContainsLoginTextExpectedValues;
            }
        }
        
        public virtual RegisterTestUserEmailParams RegisterTestUserEmailParams
        {
            get
            {
                if ((this.mRegisterTestUserEmailParams == null))
                {
                    this.mRegisterTestUserEmailParams = new RegisterTestUserEmailParams();
                }
                return this.mRegisterTestUserEmailParams;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual EnterExistingUserEmailParams EnterExistingUserEmailParams
        {
            get
            {
                if ((this.mEnterExistingUserEmailParams == null))
                {
                    this.mEnterExistingUserEmailParams = new EnterExistingUserEmailParams();
                }
                return this.mEnterExistingUserEmailParams;
            }
        }
        
        public virtual EnterExistingEmailParams EnterExistingEmailParams
        {
            get
            {
                if ((this.mEnterExistingEmailParams == null))
                {
                    this.mEnterExistingEmailParams = new EnterExistingEmailParams();
                }
                return this.mEnterExistingEmailParams;
            }
        }
        
        public virtual ClickPersonalInformationParams ClickPersonalInformationParams
        {
            get
            {
                if ((this.mClickPersonalInformationParams == null))
                {
                    this.mClickPersonalInformationParams = new ClickPersonalInformationParams();
                }
                return this.mClickPersonalInformationParams;
            }
        }
        
        public virtual DeletePersonalInformationRowParams DeletePersonalInformationRowParams
        {
            get
            {
                if ((this.mDeletePersonalInformationRowParams == null))
                {
                    this.mDeletePersonalInformationRowParams = new DeletePersonalInformationRowParams();
                }
                return this.mDeletePersonalInformationRowParams;
            }
        }
        
        public virtual EditPersonalInformationParams EditPersonalInformationParams
        {
            get
            {
                if ((this.mEditPersonalInformationParams == null))
                {
                    this.mEditPersonalInformationParams = new EditPersonalInformationParams();
                }
                return this.mEditPersonalInformationParams;
            }
        }
        
        public virtual EnterNewPersonalInformationParams EnterNewPersonalInformationParams
        {
            get
            {
                if ((this.mEnterNewPersonalInformationParams == null))
                {
                    this.mEnterNewPersonalInformationParams = new EnterNewPersonalInformationParams();
                }
                return this.mEnterNewPersonalInformationParams;
            }
        }
        
        public virtual AssertLastNameEqualstesterExpectedValues AssertLastNameEqualstesterExpectedValues
        {
            get
            {
                if ((this.mAssertLastNameEqualstesterExpectedValues == null))
                {
                    this.mAssertLastNameEqualstesterExpectedValues = new AssertLastNameEqualstesterExpectedValues();
                }
                return this.mAssertLastNameEqualstesterExpectedValues;
            }
        }
        
        public virtual AssertNameEqualsWelcomeExpectedValues AssertNameEqualsWelcomeExpectedValues
        {
            get
            {
                if ((this.mAssertNameEqualsWelcomeExpectedValues == null))
                {
                    this.mAssertNameEqualsWelcomeExpectedValues = new AssertNameEqualsWelcomeExpectedValues();
                }
                return this.mAssertNameEqualsWelcomeExpectedValues;
            }
        }
        
        public virtual AssertHeaderBarAppearsExpectedValues AssertHeaderBarAppearsExpectedValues
        {
            get
            {
                if ((this.mAssertHeaderBarAppearsExpectedValues == null))
                {
                    this.mAssertHeaderBarAppearsExpectedValues = new AssertHeaderBarAppearsExpectedValues();
                }
                return this.mAssertHeaderBarAppearsExpectedValues;
            }
        }
        
        public virtual SetSendRequestFromDateParams SetSendRequestFromDateParams
        {
            get
            {
                if ((this.mSetSendRequestFromDateParams == null))
                {
                    this.mSetSendRequestFromDateParams = new SetSendRequestFromDateParams();
                }
                return this.mSetSendRequestFromDateParams;
            }
        }
        
        public virtual SetSendRequestToDateParams SetSendRequestToDateParams
        {
            get
            {
                if ((this.mSetSendRequestToDateParams == null))
                {
                    this.mSetSendRequestToDateParams = new SetSendRequestToDateParams();
                }
                return this.mSetSendRequestToDateParams;
            }
        }
        
        public virtual ClickTopNotificationParams ClickTopNotificationParams
        {
            get
            {
                if ((this.mClickTopNotificationParams == null))
                {
                    this.mClickTopNotificationParams = new ClickTopNotificationParams();
                }
                return this.mClickTopNotificationParams;
            }
        }
        
        public virtual OpenToFullScreenParams OpenToFullScreenParams
        {
            get
            {
                if ((this.mOpenToFullScreenParams == null))
                {
                    this.mOpenToFullScreenParams = new OpenToFullScreenParams();
                }
                return this.mOpenToFullScreenParams;
            }
        }
        
        public virtual ClickEmailBoxTestParams ClickEmailBoxTestParams
        {
            get
            {
                if ((this.mClickEmailBoxTestParams == null))
                {
                    this.mClickEmailBoxTestParams = new ClickEmailBoxTestParams();
                }
                return this.mClickEmailBoxTestParams;
            }
        }
        
        public virtual PressNotificationButtonParams PressNotificationButtonParams
        {
            get
            {
                if ((this.mPressNotificationButtonParams == null))
                {
                    this.mPressNotificationButtonParams = new PressNotificationButtonParams();
                }
                return this.mPressNotificationButtonParams;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        
        public UICarnGoMicrosoftVisuaWindow UICarnGoMicrosoftVisuaWindow
        {
            get
            {
                if ((this.mUICarnGoMicrosoftVisuaWindow == null))
                {
                    this.mUICarnGoMicrosoftVisuaWindow = new UICarnGoMicrosoftVisuaWindow();
                }
                return this.mUICarnGoMicrosoftVisuaWindow;
            }
        }
        
        public UIMainWindowWindow2 UIMainWindowWindow2
        {
            get
            {
                if ((this.mUIMainWindowWindow2 == null))
                {
                    this.mUIMainWindowWindow2 = new UIMainWindowWindow2();
                }
                return this.mUIMainWindowWindow2;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RegisterEmailParams mRegisterEmailParams;
        
        private RegisterEmail_personmaildotcomParams mRegisterEmail_personmaildotcomParams;
        
        private RegisterPassword_tester1Params mRegisterPassword_tester1Params;
        
        private RepeatPassword_tester1Params mRepeatPassword_tester1Params;
        
        private AssertPageContainsLoginTextExpectedValues mAssertPageContainsLoginTextExpectedValues;
        
        private RegisterTestUserEmailParams mRegisterTestUserEmailParams;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private EnterExistingUserEmailParams mEnterExistingUserEmailParams;
        
        private EnterExistingEmailParams mEnterExistingEmailParams;
        
        private ClickPersonalInformationParams mClickPersonalInformationParams;
        
        private DeletePersonalInformationRowParams mDeletePersonalInformationRowParams;
        
        private EditPersonalInformationParams mEditPersonalInformationParams;
        
        private EnterNewPersonalInformationParams mEnterNewPersonalInformationParams;
        
        private AssertLastNameEqualstesterExpectedValues mAssertLastNameEqualstesterExpectedValues;
        
        private AssertNameEqualsWelcomeExpectedValues mAssertNameEqualsWelcomeExpectedValues;
        
        private AssertHeaderBarAppearsExpectedValues mAssertHeaderBarAppearsExpectedValues;
        
        private SetSendRequestFromDateParams mSetSendRequestFromDateParams;
        
        private SetSendRequestToDateParams mSetSendRequestToDateParams;
        
        private ClickTopNotificationParams mClickTopNotificationParams;
        
        private OpenToFullScreenParams mOpenToFullScreenParams;
        
        private ClickEmailBoxTestParams mClickEmailBoxTestParams;
        
        private PressNotificationButtonParams mPressNotificationButtonParams;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        
        private UICarnGoMicrosoftVisuaWindow mUICarnGoMicrosoftVisuaWindow;
        
        private UIMainWindowWindow2 mUIMainWindowWindow2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'hmm2' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText = "hmm2";
        
        /// <summary>
        /// Type 'Control + {RMenu}' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys = "{RMenu}";
        
        /// <summary>
        /// Type 'hmm' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText1 = "hmm";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys1 = "2";
        
        /// <summary>
        /// Type 'hmm@hmm.com' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText2 = "hmm@hmm.com";
        
        /// <summary>
        /// Type '{Tab}' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys2 = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "Dd9ZqbCj8ULSnDiwxpv0Ky4lWKxyXH0D7J5qWtZDBzGJCxMzx+MDMcaEnVxB2jL5CM5ZsWhSPrI=";
        
        /// <summary>
        /// Type '********' in 'PasswordConfirm' text box
        /// </summary>
        public string UIPasswordConfirmEditSendKeys = "bUWtUShvSGlJEfiijNK6HiN/l9ldZwoe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RegisterEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'person' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText = "person";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys = "2";
        
        /// <summary>
        /// Type 'person@email.com' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText1 = "person@email.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterEmail_personmaildotcom'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RegisterEmail_personmaildotcomParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'person' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText = "person";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys = "2";
        
        /// <summary>
        /// Type 'person@email.com' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText1 = "person@email.com";
        
        /// <summary>
        /// Type 'person' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText2 = "person";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys1 = "2";
        
        /// <summary>
        /// Type 'person@mail.com' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText3 = "person@mail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterPassword_tester1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RegisterPassword_tester1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "bUWtUShvSGlJEfiijNK6HiN/l9ldZwoe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RepeatPassword_tester1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RepeatPassword_tester1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'PasswordConfirm' text box
        /// </summary>
        public string UIPasswordConfirmEditSendKeys = "bUWtUShvSGlJEfiijNK6HiN/l9ldZwoe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPageContainsLoginText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertPageContainsLoginTextExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Enter your credentials below' label contains 'Enter your credentials below'
        /// </summary>
        public string UIEnteryourcredentialsTextName = "Enter your credentials below";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterTestUserEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RegisterTestUserEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText = "test";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditSendKeys = "2";
        
        /// <summary>
        /// Type 'test@tester.com' in first text box next to 'Enter your credentials below' label
        /// </summary>
        public string UIItemEditText1 = "test@tester.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'c' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "c";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterExistingUserEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EnterExistingUserEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'car' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "car";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "2";
        
        /// <summary>
        /// Type 'car@owner' in 'Email' text box
        /// </summary>
        public string UIEmailEditText1 = "car@owner";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterExistingEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EnterExistingEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'car' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "car";
        
        /// <summary>
        /// Type 'Alt, Control + 2' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "2";
        
        /// <summary>
        /// Type 'car@owner' in 'Email' text box
        /// </summary>
        public string UIEmailEditText1 = "car@owner";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickPersonalInformation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ClickPersonalInformationParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Left}' in first text box next to 'Personal information:' label
        /// </summary>
        public string UIItemEditSendKeys = "{Left}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeletePersonalInformationRow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DeletePersonalInformationRowParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in first text box next to 'Personal information:' label
        /// </summary>
        public string UIItemEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditPersonalInformation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditPersonalInformationParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Jens' in first text box next to 'Personal information:' label
        /// </summary>
        public string UIItemEditText = "Jens";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterNewPersonalInformation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EnterNewPersonalInformationParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'hej' in first text box next to 'Personal information:' label
        /// </summary>
        public string UIItemEditText = "hej";
        
        /// <summary>
        /// Type 'tester' in text box numbered 2 next to 'Personal information:' label
        /// </summary>
        public string UIItemEdit1Text = "tester";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertLastNameEqualstester'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertLastNameEqualstesterExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of text box numbered 2 next to 'Personal information:' label equals 'tester'
        /// </summary>
        public string UIItemEdit1Text = "tester";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNameEqualsWelcome'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertNameEqualsWelcomeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'CurrentPageFrame' pane equals 'Welcome'
        /// </summary>
        public string UICurrentPageFramePaneName = "Welcome";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertHeaderBarAppears'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertHeaderBarAppearsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'root' custom control equals 'Uia.HeaderBarControl'
        /// </summary>
        public string UIRootCustomClassName = "Uia.HeaderBarControl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetSendRequestFromDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetSendRequestFromDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'PART_TextBox' text box
        /// </summary>
        public string UIPART_TextBoxEditSendKeys = "a";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetSendRequestToDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetSendRequestToDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'PART_TextBox' text box
        /// </summary>
        public string UIPART_TextBoxEditSendKeys = "a";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickTopNotification'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ClickTopNotificationParams
    {
        
        #region Fields
        /// <summary>
        /// Set to 'Pressed' state '' toggle button
        /// </summary>
        public bool UIItemToggleButtonPressed = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenToFullScreen'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenToFullScreenParams
    {
        
        #region Fields
        /// <summary>
        /// Press keyboard shortcut keys 'Windows + {Up}'
        /// </summary>
        public string SendKeys = "{Up}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickEmailBoxTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ClickEmailBoxTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "a";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PressNotificationButton'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class PressNotificationButtonParams
    {
        
        #region Fields
        /// <summary>
        /// Set to 'Pressed' state '' toggle button
        /// </summary>
        public bool UIItemToggleButtonPressed = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIRootCustom UIRootCustom
        {
            get
            {
                if ((this.mUIRootCustom == null))
                {
                    this.mUIRootCustom = new UIRootCustom(this);
                }
                return this.mUIRootCustom;
            }
        }
        
        public UINewPageFramePane1 UINewPageFramePane
        {
            get
            {
                if ((this.mUINewPageFramePane == null))
                {
                    this.mUINewPageFramePane = new UINewPageFramePane1(this);
                }
                return this.mUINewPageFramePane;
            }
        }
        
        public UIItemCustom2 UIItemCustom2
        {
            get
            {
                if ((this.mUIItemCustom2 == null))
                {
                    this.mUIItemCustom2 = new UIItemCustom2(this);
                }
                return this.mUIItemCustom2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        
        private UIRootCustom mUIRootCustom;
        
        private UINewPageFramePane1 mUINewPageFramePane;
        
        private UIItemCustom2 mUIItemCustom2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PageNavigation";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UINewPageFramePane UINewPageFramePane
        {
            get
            {
                if ((this.mUINewPageFramePane == null))
                {
                    this.mUINewPageFramePane = new UINewPageFramePane(this);
                }
                return this.mUINewPageFramePane;
            }
        }
        
        public WpfPane UICurrentPageFramePane
        {
            get
            {
                if ((this.mUICurrentPageFramePane == null))
                {
                    this.mUICurrentPageFramePane = new WpfPane(this);
                    #region Search Criteria
                    this.mUICurrentPageFramePane.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
                    this.mUICurrentPageFramePane.SearchProperties[WpfPane.PropertyNames.AutomationId] = "CurrentPageFrame";
                    this.mUICurrentPageFramePane.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICurrentPageFramePane;
            }
        }
        #endregion
        
        #region Fields
        private UINewPageFramePane mUINewPageFramePane;
        
        private WpfPane mUICurrentPageFramePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINewPageFramePane : WpfPane
    {
        
        public UINewPageFramePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "NewPageFrame";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIEnteryourcredentialsText UIEnteryourcredentialsText
        {
            get
            {
                if ((this.mUIEnteryourcredentialsText == null))
                {
                    this.mUIEnteryourcredentialsText = new UIEnteryourcredentialsText(this);
                }
                return this.mUIEnteryourcredentialsText;
            }
        }
        
        public WpfEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Password";
                    this.mUIPasswordEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WpfEdit UIPasswordConfirmEdit
        {
            get
            {
                if ((this.mUIPasswordConfirmEdit == null))
                {
                    this.mUIPasswordConfirmEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPasswordConfirmEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordConfirm";
                    this.mUIPasswordConfirmEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPasswordConfirmEdit;
            }
        }
        
        public WpfEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Email";
                    this.mUIEmailEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public UIPersonalinformationText UIPersonalinformationText
        {
            get
            {
                if ((this.mUIPersonalinformationText == null))
                {
                    this.mUIPersonalinformationText = new UIPersonalinformationText(this);
                }
                return this.mUIPersonalinformationText;
            }
        }
        
        public WpfEdit UIPART_TextBoxEdit
        {
            get
            {
                if ((this.mUIPART_TextBoxEdit == null))
                {
                    this.mUIPART_TextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_TextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mUIPART_TextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPART_TextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIEnteryourcredentialsText mUIEnteryourcredentialsText;
        
        private WpfEdit mUIPasswordEdit;
        
        private WpfEdit mUIPasswordConfirmEdit;
        
        private WpfEdit mUIEmailEdit;
        
        private UIPersonalinformationText mUIPersonalinformationText;
        
        private WpfEdit mUIPART_TextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEnteryourcredentialsText : WpfText
    {
        
        public UIEnteryourcredentialsText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Enter your credentials below";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPersonalinformationText : WpfText
    {
        
        public UIPersonalinformationText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Personal information:";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WpfEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        
        private WpfEdit mUIItemEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootCustom : WpfCustom
    {
        
        public UIRootCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.HeaderBarControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIRootCustom1 UIRootCustom1
        {
            get
            {
                if ((this.mUIRootCustom1 == null))
                {
                    this.mUIRootCustom1 = new UIRootCustom1(this);
                }
                return this.mUIRootCustom1;
            }
        }
        
        public UIItem14Text UIItem14Text
        {
            get
            {
                if ((this.mUIItem14Text == null))
                {
                    this.mUIItem14Text = new UIItem14Text(this);
                }
                return this.mUIItem14Text;
            }
        }
        
        public UIItem22Text UIItem22Text
        {
            get
            {
                if ((this.mUIItem22Text == null))
                {
                    this.mUIItem22Text = new UIItem22Text(this);
                }
                return this.mUIItem22Text;
            }
        }
        
        public UIItem23Text UIItem23Text
        {
            get
            {
                if ((this.mUIItem23Text == null))
                {
                    this.mUIItem23Text = new UIItem23Text(this);
                }
                return this.mUIItem23Text;
            }
        }
        
        public UIItem26Text UIItem26Text
        {
            get
            {
                if ((this.mUIItem26Text == null))
                {
                    this.mUIItem26Text = new UIItem26Text(this);
                }
                return this.mUIItem26Text;
            }
        }
        
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public UIItem2Text UIItem2Text
        {
            get
            {
                if ((this.mUIItem2Text == null))
                {
                    this.mUIItem2Text = new UIItem2Text(this);
                }
                return this.mUIItem2Text;
            }
        }
        
        public UIItem0Text UIItem0Text
        {
            get
            {
                if ((this.mUIItem0Text == null))
                {
                    this.mUIItem0Text = new UIItem0Text(this);
                }
                return this.mUIItem0Text;
            }
        }
        
        public WpfToggleButton UIItemToggleButton
        {
            get
            {
                if ((this.mUIItemToggleButton == null))
                {
                    this.mUIItemToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mUIItemToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "NotificationButton";
                    this.mUIItemToggleButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRootCustom1 mUIRootCustom1;
        
        private UIItem14Text mUIItem14Text;
        
        private UIItem22Text mUIItem22Text;
        
        private UIItem23Text mUIItem23Text;
        
        private UIItem26Text mUIItem26Text;
        
        private WpfButton mUIItemButton;
        
        private UIItem2Text mUIItem2Text;
        
        private UIItem0Text mUIItem0Text;
        
        private WpfToggleButton mUIItemToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootCustom1 : WpfCustom
    {
        
        public UIRootCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SearchBarControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WpfButton.PropertyNames.Instance] = "2";
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public WpfButton UIItemButton1
        {
            get
            {
                if ((this.mUIItemButton1 == null))
                {
                    this.mUIItemButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton1.SearchProperties[WpfButton.PropertyNames.Instance] = "3";
                    this.mUIItemButton1.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton1;
            }
        }
        
        public WpfButton UIItemButton2
        {
            get
            {
                if ((this.mUIItemButton2 == null))
                {
                    this.mUIItemButton2 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton2.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton2.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton2;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        
        private WpfButton mUIItemButton1;
        
        private WpfButton mUIItemButton2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem14Text : WpfText
    {
        
        public UIItem14Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "14";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem22Text : WpfText
    {
        
        public UIItem22Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "22";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem23Text : WpfText
    {
        
        public UIItem23Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "23";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem26Text : WpfText
    {
        
        public UIItem26Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "26";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem2Text : WpfText
    {
        
        public UIItem2Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "2";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem0Text : WpfText
    {
        
        public UIItem0Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "0";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINewPageFramePane1 : WpfPane
    {
        
        public UINewPageFramePane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "NewPageFrame";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UITheDateenteredhastobDatePicker UITheDateenteredhastobDatePicker
        {
            get
            {
                if ((this.mUITheDateenteredhastobDatePicker == null))
                {
                    this.mUITheDateenteredhastobDatePicker = new UITheDateenteredhastobDatePicker(this);
                }
                return this.mUITheDateenteredhastobDatePicker;
            }
        }
        #endregion
        
        #region Fields
        private UITheDateenteredhastobDatePicker mUITheDateenteredhastobDatePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITheDateenteredhastobDatePicker : WpfDatePicker
    {
        
        public UITheDateenteredhastobDatePicker(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfDatePicker.PropertyNames.HelpText] = "The Date entered has to be after the current date or after";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_TextBoxEdit
        {
            get
            {
                if ((this.mUIPART_TextBoxEdit == null))
                {
                    this.mUIPART_TextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_TextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mUIPART_TextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPART_TextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_TextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom2 : WpfCustom
    {
        
        public UIItemCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.NotificationView";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom1 mUIItemCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RenterItemView";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIConfirmButton
        {
            get
            {
                if ((this.mUIConfirmButton == null))
                {
                    this.mUIConfirmButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIConfirmButton.SearchProperties[WpfButton.PropertyNames.Name] = "Confirm";
                    this.mUIConfirmButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIConfirmButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIConfirmButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow1 : WpfWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.FilterProperties[WpfWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemCustom3 UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom3(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom3 mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom3 : WpfCustom
    {
        
        public UIItemCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PageNavigation";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfPane UICurrentPageFramePane
        {
            get
            {
                if ((this.mUICurrentPageFramePane == null))
                {
                    this.mUICurrentPageFramePane = new WpfPane(this);
                    #region Search Criteria
                    this.mUICurrentPageFramePane.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
                    this.mUICurrentPageFramePane.SearchProperties[WpfPane.PropertyNames.AutomationId] = "CurrentPageFrame";
                    this.mUICurrentPageFramePane.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICurrentPageFramePane;
            }
        }
        #endregion
        
        #region Fields
        private WpfPane mUICurrentPageFramePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICarnGoMicrosoftVisuaWindow : WinWindow
    {
        
        public UICarnGoMicrosoftVisuaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "CarnGo - Microsoft Visual Studio ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CarnGo - Microsoft Visual Studio ");
            #endregion
        }
        
        #region Properties
        public UIPropertiesPane UIPropertiesPane
        {
            get
            {
                if ((this.mUIPropertiesPane == null))
                {
                    this.mUIPropertiesPane = new UIPropertiesPane(this);
                }
                return this.mUIPropertiesPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPropertiesPane mUIPropertiesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPropertiesPane : WpfPane
    {
        
        public UIPropertiesPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ViewPresenter";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ST:0:0:{eefa5220-e298-11d0-8f78-00a0c9110057}";
            this.WindowTitles.Add("CarnGo - Microsoft Visual Studio ");
            #endregion
        }
        
        #region Properties
        public UIPropertiesTitleBar UIPropertiesTitleBar
        {
            get
            {
                if ((this.mUIPropertiesTitleBar == null))
                {
                    this.mUIPropertiesTitleBar = new UIPropertiesTitleBar(this);
                }
                return this.mUIPropertiesTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPropertiesTitleBar mUIPropertiesTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPropertiesTitleBar : WpfTitleBar
    {
        
        public UIPropertiesTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTitleBar.PropertyNames.AutomationId] = "TitleBar";
            this.WindowTitles.Add("CarnGo - Microsoft Visual Studio ");
            #endregion
        }
        
        #region Properties
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPane mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemPane : WpfPane
    {
        
        public UIItemPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.HwndHost";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("CarnGo - Microsoft Visual Studio ");
            #endregion
        }
        
        #region Properties
        public UIPropertyGridClient UIPropertyGridClient
        {
            get
            {
                if ((this.mUIPropertyGridClient == null))
                {
                    this.mUIPropertyGridClient = new UIPropertyGridClient(this);
                }
                return this.mUIPropertyGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPropertyGridClient mUIPropertyGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPropertyGridClient : WinClient
    {
        
        public UIPropertyGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "PropertyGrid";
            this.WindowTitles.Add("CarnGo - Microsoft Visual Studio ");
            #endregion
        }
        
        #region Properties
        public WinTable UIPropertyGridViewTable
        {
            get
            {
                if ((this.mUIPropertyGridViewTable == null))
                {
                    this.mUIPropertyGridViewTable = new WinTable(this);
                    #region Search Criteria
                    this.mUIPropertyGridViewTable.SearchProperties[WinTable.PropertyNames.Name] = "Properties Window";
                    this.mUIPropertyGridViewTable.WindowTitles.Add("CarnGo - Microsoft Visual Studio ");
                    #endregion
                }
                return this.mUIPropertyGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private WinTable mUIPropertyGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow2 : WinWindow
    {
        
        public UIMainWindowWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
    }
}
